/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Speech.phoneme;

import Speech.common.StreamConverter;
import Speech.gui.MainFrame;
import Speech.settings.LanguageEntry;
import Speech.sqlconnection.MysqlConnect;
import com.mysql.jdbc.Connection;
import java.awt.Dimension;
import java.io.File;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import Speech.rmi.VrasiClientKWS;

/**
 *
 * @author Lok Bahadur Chetri<lok.b.chetri@gmail.com>
 */
public class AddKeyword extends javax.swing.JPanel {
private MainFrame mframe;
private KeyWordBuilder keyBuilder;
AudioInputStream audioInputStream;
Connection conn;
private ResultSet rs = null;
private PreparedStatement pst = null;

    /**
     * Creates new form AddKeyword
     */
    public AddKeyword(String lang, MainFrame mframe, int startPos, int endPos, String filename, AudioInputStream audioStream) {
        initComponents();
        try {
            initComponents();
            
            conn = (Connection) new MysqlConnect().getDBConnection();
        } catch (Exception ex) {
            Logger.getLogger(LanguageEntry.class.getName()).log(Level.SEVERE, null, ex);
        }

        //lang=lang.toLowerCase();
        // invoke pr and get trans
        keyBuilder = new KeyWordBuilder();
        //boolean r= x.setSource(fname, lang, fname, redoStack);
        //StreamConverter.streamTowavefile(filename,  audioStream);
        
        keyBuilder=new KeyWordBuilder();
        boolean result = keyBuilder.setSource(mframe.getUserID() + "phoneme" + ".wav", lang, mframe.getUserID() + "phoneme", null);

        System.out.println(filename+" "+lang+" "+mframe.getUserID()+" " +null);
        this.setVisible(true);
        this.setSize(new Dimension(290, 490)); 
        this.txtLang.setText(lang);
        this.txtTransc.setText(displayTranscription());
        this.txtLang.setEnabled(false);
        //this.txtTransc.setEnabled(false);
        
    }
public String displayTranscription() {
        List spList = keyBuilder.keyExtract;
        if (spList == null) {
            return "Not found";
        }
        //
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < spList.size(); i++) {
            if (spList.get(i).toString().startsWith("sil")) {
                sb.append(" sil ");
            } else {
                sb.append(" "+spList.get(i).toString());
            }

        }
        return sb.toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        txtKeyword = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTransc = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtLang = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Keyword ");

        txtKeyword.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtKeyword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKeywordActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Transc.    ");

        txtTransc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtTransc.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Language     ");

        jComboBox1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "list 1", "list 2", "list 3", "list 4", "list 5" }));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("List");

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Priority        ");

        jComboBox2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "priority 1", "priority 2", "priority 3", "priority 4", "priority 5", "priority 6", "priority 7", "priority 8", "priority 9", "priority 10" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtKeyword)
                            .addComponent(jComboBox1, 0, 205, Short.MAX_VALUE)
                            .addComponent(txtTransc, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtLang)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, 0, 205, Short.MAX_VALUE)))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtKeyword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTransc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtLang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtKeywordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKeywordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKeywordActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //save the keyword and update dictionary 
        String kw=txtKeyword.getText().trim();
        String trans=txtTransc.getText().trim();
        String language=txtLang.getText().trim();
        String listname=jComboBox1.getSelectedItem().toString();
        String priority=jComboBox2.getSelectedItem().toString();
        if(kw.length()==0 || kw==null)
            JOptionPane.showMessageDialog(null, "Please enter a valid keyword","Warning",JOptionPane.WARNING_MESSAGE);
        else if (trans.length()==0 || trans==null)
            JOptionPane.showMessageDialog(null, "Transcription cannot be blank","Warning",JOptionPane.WARNING_MESSAGE);
        else
        {
            //add to database
            if(language.equals("Hindi")){
                language="Hindi_part1";
            }
            
            if(language.equals("Assamese")){
                language="Assamese_part1";
            }
           
            if(language.equals("Telugu")){
                priority=priority.replace(" ","");                                
                
            } 
            
            String q = "insert into keyword_master (language,keyword,listname,groupname)values('"+language+"','"+kw+"','"+listname+"','"+priority+"')";
           
            try {
                pst = conn.prepareStatement(q);
                pst.execute();
            } catch (SQLException ex) {
                Logger.getLogger(LanguageEntry.class.getName()).log(Level.SEVERE, null, ex);
            }
            

            
            //----- update dict
            if(language.equals("Hindi_part1")){
                language="Hindi";
            }
          
            if(language.equals("Assamese_part1")){
                language="Assamese";
            }
            
            VrasiClientKWS vClient=new VrasiClientKWS() ;
            String tmp=txtTransc.getText().trim();
            tmp=tmp.replaceAll(" ", "_").toLowerCase();
            vClient.updateDictionary(txtLang.getText().trim(), txtKeyword.getText().trim(), tmp);
            //---
            JOptionPane.showMessageDialog(null, "New keyword saved successfully !", "Information", JOptionPane.INFORMATION_MESSAGE);
        }

        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtKeyword;
    private javax.swing.JTextField txtLang;
    private javax.swing.JTextField txtTransc;
    // End of variables declaration//GEN-END:variables
}
