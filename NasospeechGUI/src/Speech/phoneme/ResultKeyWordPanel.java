/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ResultKeyWordPanel.java
 *
 * Created on 4 Jan, 2013, 12:39:04 PM
 */
package Speech.phoneme;

import java.awt.BorderLayout;
import java.awt.Font;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Icon;
import javax.swing.JTree;
import javax.swing.UIManager;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.plaf.IconUIResource;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;

/**
 *
 * @author Tatapower SED
 *
 */
public class ResultKeyWordPanel extends javax.swing.JPanel {

    private JTree tree;
    public PlotWavePhoneme pWave;

    /**
     * Creates new form ResultKeyWordPanel
     */
    public ResultKeyWordPanel(PlotWavePhoneme pWave) {
        initComponents();
        this.pWave = pWave;
        treeBuilder();
    }

    public void treeBuilder() {
        List keyWord = pWave.keyBuilder.getKeywordsList();
        List startTime = pWave.keyBuilder.getStartTimeList();
        List endTime = pWave.keyBuilder.getEndTimeList();
        if (keyWord == null || startTime == null || endTime == null) {
            return;
        }
        Icon empty = new TreeIcon();
        UIManager.put("Tree.closedIcon", empty);
        UIManager.put("Tree.openIcon", empty);
        UIManager.put("Tree.leafIcon", empty);
        UIManager.put("Tree.collapsedIcon", new IconUIResource(new NodeIcon('+')));
        UIManager.put("Tree.expandedIcon", new IconUIResource(new NodeIcon('-')));
        DefaultMutableTreeNode parent = new DefaultMutableTreeNode("KeyWord List", true);
        boolean isKeyAlready = false;
        DefaultMutableTreeNode key;
        DefaultMutableTreeNode time;
        List indexPos = new ArrayList();
        for (int i = 0; i < keyWord.size(); i++) {
            String keyStr = keyWord.get(i).toString();
            for (int k = 0; k < indexPos.size(); k++) {
                if (keyStr.toLowerCase().equals(indexPos.get(k).toString())) {
                    isKeyAlready = true;
                    break;
                }
            }
            if (isKeyAlready) {
                isKeyAlready = false;
                continue;
            }

            key = new DefaultMutableTreeNode(keyStr);
            try {
                BigDecimal startMS = new BigDecimal(startTime.get(i).toString());
                BigDecimal endMS = new BigDecimal(endTime.get(i).toString());
                BigDecimal divided = new BigDecimal("10000000");

                time = new DefaultMutableTreeNode((startMS.divide(divided)).toString() + " - " + (endMS.divide(divided)).toString(), true);
                key.add(time);

                for (int j = i + 1; j < keyWord.size(); j++) {
                    if ((keyStr.toLowerCase()).equals((keyWord.get(j).toString()).toLowerCase())) {
                        startMS = new BigDecimal(startTime.get(j).toString());
                        endMS = new BigDecimal(endTime.get(j).toString());
                        time = new DefaultMutableTreeNode((startMS.divide(divided)).toString() + " - " + (endMS.divide(divided)).toString(), true);

                        key.add(time);
                        indexPos.add(keyStr.toLowerCase());
                    }
                }
                parent.add(key);
            } catch (NumberFormatException e) {
                System.err.println(e);
            }
        }

        tree = new JTree(parent);
        tree.setFont(new Font("Courier New", Font.PLAIN, 14));
        tree.addTreeSelectionListener(new TreeSelectionListener() {
            public void valueChanged(TreeSelectionEvent evt) {
                // Get all nodes whose selection status has changed
                TreePath[] paths = evt.getPaths();

                // Iterate through all affected nodes
                for (int i = 0; i < paths.length; i++) {
                    if (evt.isAddedPath(i)) {
                        // This node has been selected
                        System.out.println(paths[i].getLastPathComponent().toString());
                        break;
                    } else {
                        // This node has been deselected
                        break;
                    }
                }
            }
        });
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(tree);
        jPanel1.revalidate();
        jPanel1.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 171, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
