/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FileBrowser.java
 *
 * Created on 4 Jan, 2013, 3:53:29 PM
 */
package Speech.gui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Font;
import javax.swing.*;
import java.io.*;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;

/**
 *
 * @author Tatapower SED
 *
 */
public class FileBrowser extends javax.swing.JPanel {

    JTree tree;

    /**
     * Creates new form FileBrowser
     */
    public FileBrowser() {
        initComponents();
        this.setSize(new Dimension(400, 400));
        treeBuilder();
    }

    public void treeBuilder() {

        DefaultMutableTreeNode parent = new DefaultMutableTreeNode("KeyWord List", true);
        listAllFiles("/home/", parent, true);
        tree = new JTree(parent);
        tree.setFont(new Font("Courier New", Font.PLAIN, 16));
        tree.addTreeSelectionListener(new TreeSelectionListener() {
            public void valueChanged(TreeSelectionEvent evt) {
                // Get all nodes whose selection status has changed
                TreePath[] paths = evt.getPaths();

                // Iterate through all affected nodes
                for (int i = 0; i < paths.length; i++) {
                    if (evt.isAddedPath(i)) {
                        // This node has been selected
                        System.out.println(paths[i].getLastPathComponent());

                        File test1 = new File(paths[i].getLastPathComponent().toString());

                        System.out.println(test1.getAbsolutePath());
                        break;
                    } else {
                        // This node has been deselected
                        break;
                    }
                }
            }
        });
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(tree);
        jPanel1.revalidate();
        jPanel1.repaint();

    }

    public static void listAllFiles(String directory, DefaultMutableTreeNode parent, Boolean recursive) {
        directory = "C:\\";

        File[] children = new File(directory).listFiles(); // list all the files in the directory
        for (int i = 0; i < children.length; i++) { // loop through each
            DefaultMutableTreeNode node = new DefaultMutableTreeNode(children[i].getName());

            // only display the node if it isn't a folder, and if this is a recursive call
            if (children[i].isDirectory() && recursive) {
                System.out.println(children[i].getName());
                parent.add(node); // add as a child node

                listAllFiles(children[i].getPath(), node, recursive); // call again for the subdirectory
            } else if (!children[i].isDirectory()) { // otherwise, if it isn't a directory
                if ((children[i].getName().toLowerCase()).endsWith(".wav")) {
                    parent.add(node);
                }// add it as a node and do nothing else
            }
        }
    }

    public static void main(String agrs[]) {
        JFrame jf = new JFrame();
        // jf.setSize(new Dimension(100,100));
        jf.add(new FileBrowser());
        jf.setVisible(true);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 187, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 399, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
